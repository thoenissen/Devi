// <auto-generated />
using System;
using Devi.ServiceHosts.WebApi.Data.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Devi.ServiceHosts.WebApi.Data.Entity.Migrations
{
    [DbContext(typeof(DbContext))]
    [Migration("20230626203852_Update001")]
    partial class Update001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Devi.ServiceHosts.WebApi.Data.Entity.Tables.LookingForGroup.LookingForGroupAppointmentEntity", b =>
                {
                    b.Property<decimal>("MessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("ChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("CreationUserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ThreadId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.ToTable("LookingForGroupAppointments");
                });

            modelBuilder.Entity("Devi.ServiceHosts.WebApi.Data.Entity.Tables.LookingForGroup.LookingForGroupParticipantEntity", b =>
                {
                    b.Property<decimal>("AppointmentMessageId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("UserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<DateTime>("RegistrationTimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("AppointmentMessageId", "UserId");

                    b.ToTable("LookingForGroupParticipants");
                });

            modelBuilder.Entity("Devi.ServiceHosts.WebApi.Data.Entity.Tables.Reminders.OneTimeReminderEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("DiscordChannelId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<decimal>("DiscordUserId")
                        .HasColumnType("decimal(20,0)");

                    b.Property<bool>("IsExecuted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OneTimeReminders");
                });

            modelBuilder.Entity("Devi.ServiceHosts.WebApi.Data.Entity.Tables.LookingForGroup.LookingForGroupParticipantEntity", b =>
                {
                    b.HasOne("Devi.ServiceHosts.WebApi.Data.Entity.Tables.LookingForGroup.LookingForGroupAppointmentEntity", "Appointment")
                        .WithMany("Participants")
                        .HasForeignKey("AppointmentMessageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Devi.ServiceHosts.WebApi.Data.Entity.Tables.LookingForGroup.LookingForGroupAppointmentEntity", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
